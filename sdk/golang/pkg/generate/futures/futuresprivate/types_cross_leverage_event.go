// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package futuresprivate

import (
	json "github.com/goccy/go-json"
	"github.com/Kucoin/kucoin-universal-sdk/sdk/golang/pkg/types"
)

// CrossLeverageEvent struct for CrossLeverageEvent
type CrossLeverageEvent struct {
	// common response
	CommonResponse *types.WsMessage
	Data           map[string]CrossLeverageDataValue `json:"data,omitempty"`
}

// NewCrossLeverageEvent instantiates a new CrossLeverageEvent object
// This constructor will assign default values to properties that have it defined
func NewCrossLeverageEvent(data map[string]CrossLeverageDataValue) *CrossLeverageEvent {
	this := CrossLeverageEvent{}
	this.Data = data
	return &this
}

// NewCrossLeverageEventWithDefaults instantiates a new CrossLeverageEvent object
// This constructor will only assign default values to properties that have it defined,
func NewCrossLeverageEventWithDefaults() *CrossLeverageEvent {
	this := CrossLeverageEvent{}
	return &this
}

func (o *CrossLeverageEvent) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	return toSerialize
}

func (o *CrossLeverageEvent) UnmarshalJSON(b []byte) error {
	err := json.Unmarshal(b, &o.Data)
	return err
}

type CrossLeverageEventCallback func(topic string, subject string, data *CrossLeverageEvent) error

type CrossLeverageEventCallbackWrapper struct {
	callback CrossLeverageEventCallback
}

func (w *CrossLeverageEventCallbackWrapper) OnMessage(msg *types.WsMessage) error {
	obj := &CrossLeverageEvent{}
	err := json.Unmarshal(msg.RawData, obj)
	if err != nil {
		return err
	}
	obj.CommonResponse = msg
	return w.callback(msg.Topic, msg.Subject, obj)
}
