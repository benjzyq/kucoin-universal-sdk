// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package futurespublic

import (
	json "github.com/goccy/go-json"
	"github.com/Kucoin/kucoin-universal-sdk/sdk/golang/pkg/types"
)

// SymbolSnapshotEvent struct for SymbolSnapshotEvent
type SymbolSnapshotEvent struct {
	// common response
	CommonResponse     *types.WsMessage
	HighPrice          float64 `json:"highPrice,omitempty"`
	LastPrice          float64 `json:"lastPrice,omitempty"`
	LowPrice           float64 `json:"lowPrice,omitempty"`
	Price24HoursBefore float64 `json:"price24HoursBefore,omitempty"`
	PriceChg           float64 `json:"priceChg,omitempty"`
	PriceChgPct        float64 `json:"priceChgPct,omitempty"`
	Symbol             string  `json:"symbol,omitempty"`
	Ts                 int64   `json:"ts,omitempty"`
	Turnover           float64 `json:"turnover,omitempty"`
	Volume             float64 `json:"volume,omitempty"`
}

// NewSymbolSnapshotEvent instantiates a new SymbolSnapshotEvent object
// This constructor will assign default values to properties that have it defined
func NewSymbolSnapshotEvent(highPrice float64, lastPrice float64, lowPrice float64, price24HoursBefore float64, priceChg float64, priceChgPct float64, symbol string, ts int64, turnover float64, volume float64) *SymbolSnapshotEvent {
	this := SymbolSnapshotEvent{}
	this.HighPrice = highPrice
	this.LastPrice = lastPrice
	this.LowPrice = lowPrice
	this.Price24HoursBefore = price24HoursBefore
	this.PriceChg = priceChg
	this.PriceChgPct = priceChgPct
	this.Symbol = symbol
	this.Ts = ts
	this.Turnover = turnover
	this.Volume = volume
	return &this
}

// NewSymbolSnapshotEventWithDefaults instantiates a new SymbolSnapshotEvent object
// This constructor will only assign default values to properties that have it defined,
func NewSymbolSnapshotEventWithDefaults() *SymbolSnapshotEvent {
	this := SymbolSnapshotEvent{}
	return &this
}

func (o *SymbolSnapshotEvent) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["highPrice"] = o.HighPrice
	toSerialize["lastPrice"] = o.LastPrice
	toSerialize["lowPrice"] = o.LowPrice
	toSerialize["price24HoursBefore"] = o.Price24HoursBefore
	toSerialize["priceChg"] = o.PriceChg
	toSerialize["priceChgPct"] = o.PriceChgPct
	toSerialize["symbol"] = o.Symbol
	toSerialize["ts"] = o.Ts
	toSerialize["turnover"] = o.Turnover
	toSerialize["volume"] = o.Volume
	return toSerialize
}

type SymbolSnapshotEventCallback func(topic string, subject string, data *SymbolSnapshotEvent) error

type SymbolSnapshotEventCallbackWrapper struct {
	callback SymbolSnapshotEventCallback
}

func (w *SymbolSnapshotEventCallbackWrapper) OnMessage(msg *types.WsMessage) error {
	obj := &SymbolSnapshotEvent{}
	err := json.Unmarshal(msg.RawData, obj)
	if err != nil {
		return err
	}
	obj.CommonResponse = msg
	return w.callback(msg.Topic, msg.Subject, obj)
}
