// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package spotprivate

import (
	json "github.com/goccy/go-json"
	"github.com/Kucoin/kucoin-universal-sdk/sdk/golang/pkg/types"
)

// AccountEvent struct for AccountEvent
type AccountEvent struct {
	// common response
	CommonResponse *types.WsMessage
	// Account ID
	AccountId string `json:"accountId,omitempty"`
	// Funds available to withdraw or trade
	Available string `json:"available,omitempty"`
	// The change of available Funds
	AvailableChange string `json:"availableChange,omitempty"`
	// currency
	Currency string `json:"currency,omitempty"`
	// Funds on hold (not available for use)
	Hold string `json:"hold,omitempty"`
	// The change of hold funds
	HoldChange      string                 `json:"holdChange,omitempty"`
	RelationContext AccountRelationContext `json:"relationContext,omitempty"`
	// Relation event
	RelationEvent string `json:"relationEvent,omitempty"`
	// Relation event Id
	RelationEventId string `json:"relationEventId,omitempty"`
	Time            string `json:"time,omitempty"`
	// Total balance = available + hold
	Total string `json:"total,omitempty"`
}

// NewAccountEvent instantiates a new AccountEvent object
// This constructor will assign default values to properties that have it defined
func NewAccountEvent(accountId string, available string, availableChange string, currency string, hold string, holdChange string, relationContext AccountRelationContext, relationEvent string, relationEventId string, time string, total string) *AccountEvent {
	this := AccountEvent{}
	this.AccountId = accountId
	this.Available = available
	this.AvailableChange = availableChange
	this.Currency = currency
	this.Hold = hold
	this.HoldChange = holdChange
	this.RelationContext = relationContext
	this.RelationEvent = relationEvent
	this.RelationEventId = relationEventId
	this.Time = time
	this.Total = total
	return &this
}

// NewAccountEventWithDefaults instantiates a new AccountEvent object
// This constructor will only assign default values to properties that have it defined,
func NewAccountEventWithDefaults() *AccountEvent {
	this := AccountEvent{}
	return &this
}

func (o *AccountEvent) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["accountId"] = o.AccountId
	toSerialize["available"] = o.Available
	toSerialize["availableChange"] = o.AvailableChange
	toSerialize["currency"] = o.Currency
	toSerialize["hold"] = o.Hold
	toSerialize["holdChange"] = o.HoldChange
	toSerialize["relationContext"] = o.RelationContext
	toSerialize["relationEvent"] = o.RelationEvent
	toSerialize["relationEventId"] = o.RelationEventId
	toSerialize["time"] = o.Time
	toSerialize["total"] = o.Total
	return toSerialize
}

type AccountEventCallback func(topic string, subject string, data *AccountEvent) error

type AccountEventCallbackWrapper struct {
	callback AccountEventCallback
}

func (w *AccountEventCallbackWrapper) OnMessage(msg *types.WsMessage) error {
	obj := &AccountEvent{}
	err := json.Unmarshal(msg.RawData, obj)
	if err != nil {
		return err
	}
	obj.CommonResponse = msg
	return w.callback(msg.Topic, msg.Subject, obj)
}
