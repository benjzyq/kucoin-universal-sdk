// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package spotpublic

import (
	json "github.com/goccy/go-json"
	"github.com/Kucoin/kucoin-universal-sdk/sdk/golang/pkg/types"
)

// OrderbookIncrementEvent struct for OrderbookIncrementEvent
type OrderbookIncrementEvent struct {
	// common response
	CommonResponse *types.WsMessage
	Changes        OrderbookIncrementChanges `json:"changes,omitempty"`
	SequenceEnd    int64                     `json:"sequenceEnd,omitempty"`
	SequenceStart  int64                     `json:"sequenceStart,omitempty"`
	Symbol         string                    `json:"symbol,omitempty"`
	// milliseconds
	Time int64 `json:"time,omitempty"`
}

// NewOrderbookIncrementEvent instantiates a new OrderbookIncrementEvent object
// This constructor will assign default values to properties that have it defined
func NewOrderbookIncrementEvent(changes OrderbookIncrementChanges, sequenceEnd int64, sequenceStart int64, symbol string, time int64) *OrderbookIncrementEvent {
	this := OrderbookIncrementEvent{}
	this.Changes = changes
	this.SequenceEnd = sequenceEnd
	this.SequenceStart = sequenceStart
	this.Symbol = symbol
	this.Time = time
	return &this
}

// NewOrderbookIncrementEventWithDefaults instantiates a new OrderbookIncrementEvent object
// This constructor will only assign default values to properties that have it defined,
func NewOrderbookIncrementEventWithDefaults() *OrderbookIncrementEvent {
	this := OrderbookIncrementEvent{}
	return &this
}

func (o *OrderbookIncrementEvent) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["changes"] = o.Changes
	toSerialize["sequenceEnd"] = o.SequenceEnd
	toSerialize["sequenceStart"] = o.SequenceStart
	toSerialize["symbol"] = o.Symbol
	toSerialize["time"] = o.Time
	return toSerialize
}

type OrderbookIncrementEventCallback func(topic string, subject string, data *OrderbookIncrementEvent) error

type OrderbookIncrementEventCallbackWrapper struct {
	callback OrderbookIncrementEventCallback
}

func (w *OrderbookIncrementEventCallbackWrapper) OnMessage(msg *types.WsMessage) error {
	obj := &OrderbookIncrementEvent{}
	err := json.Unmarshal(msg.RawData, obj)
	if err != nil {
		return err
	}
	obj.CommonResponse = msg
	return w.callback(msg.Topic, msg.Subject, obj)
}
