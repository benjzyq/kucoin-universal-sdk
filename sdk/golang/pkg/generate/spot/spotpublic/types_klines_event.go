// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package spotpublic

import (
	json "github.com/goccy/go-json"
	"github.com/Kucoin/kucoin-universal-sdk/sdk/golang/pkg/types"
)

// KlinesEvent struct for KlinesEvent
type KlinesEvent struct {
	// common response
	CommonResponse *types.WsMessage
	// symbol
	Symbol string `json:"symbol,omitempty"`
	// Start time of the candle cycle,open price,close price, high price,low price,Transaction volume,Transaction amount
	Candles []string `json:"candles,omitempty"`
	// now（us）
	Time int64 `json:"time,omitempty"`
}

// NewKlinesEvent instantiates a new KlinesEvent object
// This constructor will assign default values to properties that have it defined
func NewKlinesEvent(symbol string, candles []string, time int64) *KlinesEvent {
	this := KlinesEvent{}
	this.Symbol = symbol
	this.Candles = candles
	this.Time = time
	return &this
}

// NewKlinesEventWithDefaults instantiates a new KlinesEvent object
// This constructor will only assign default values to properties that have it defined,
func NewKlinesEventWithDefaults() *KlinesEvent {
	this := KlinesEvent{}
	return &this
}

func (o *KlinesEvent) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["symbol"] = o.Symbol
	toSerialize["candles"] = o.Candles
	toSerialize["time"] = o.Time
	return toSerialize
}

type KlinesEventCallback func(topic string, subject string, data *KlinesEvent) error

type KlinesEventCallbackWrapper struct {
	callback KlinesEventCallback
}

func (w *KlinesEventCallbackWrapper) OnMessage(msg *types.WsMessage) error {
	obj := &KlinesEvent{}
	err := json.Unmarshal(msg.RawData, obj)
	if err != nil {
		return err
	}
	obj.CommonResponse = msg
	return w.callback(msg.Topic, msg.Subject, obj)
}
