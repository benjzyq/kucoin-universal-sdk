// Code generated by Kucoin Universal SDK Generator; DO NOT EDIT.

package marginpublic

import (
	json "github.com/goccy/go-json"
	"github.com/Kucoin/kucoin-universal-sdk/sdk/golang/pkg/types"
)

// MarkPriceEvent struct for MarkPriceEvent
type MarkPriceEvent struct {
	// common response
	CommonResponse *types.WsMessage
	Symbol         string  `json:"symbol,omitempty"`
	Granularity    int32   `json:"granularity,omitempty"`
	Timestamp      int64   `json:"timestamp,omitempty"`
	Value          float64 `json:"value,omitempty"`
}

// NewMarkPriceEvent instantiates a new MarkPriceEvent object
// This constructor will assign default values to properties that have it defined
func NewMarkPriceEvent(symbol string, granularity int32, timestamp int64, value float64) *MarkPriceEvent {
	this := MarkPriceEvent{}
	this.Symbol = symbol
	this.Granularity = granularity
	this.Timestamp = timestamp
	this.Value = value
	return &this
}

// NewMarkPriceEventWithDefaults instantiates a new MarkPriceEvent object
// This constructor will only assign default values to properties that have it defined,
func NewMarkPriceEventWithDefaults() *MarkPriceEvent {
	this := MarkPriceEvent{}
	return &this
}

func (o *MarkPriceEvent) ToMap() map[string]interface{} {
	toSerialize := map[string]interface{}{}
	toSerialize["symbol"] = o.Symbol
	toSerialize["granularity"] = o.Granularity
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["value"] = o.Value
	return toSerialize
}

type MarkPriceEventCallback func(topic string, subject string, data *MarkPriceEvent) error

type MarkPriceEventCallbackWrapper struct {
	callback MarkPriceEventCallback
}

func (w *MarkPriceEventCallbackWrapper) OnMessage(msg *types.WsMessage) error {
	obj := &MarkPriceEvent{}
	err := json.Unmarshal(msg.RawData, obj)
	if err != nil {
		return err
	}
	obj.CommonResponse = msg
	return w.callback(msg.Topic, msg.Subject, obj)
}
